@model BlogProject.ViewModel.Catalog.Posts.PostDetailRequest
@using BlogProject.ViewModel.Catalog.Comments
@using BlogProject.ViewModel.Catalog.Posts
@using BlogProject.ViewModel.Catalog.Categories
@{
	List<CommentVm> objectList = ViewData["commentList"] as List<CommentVm>;
	List<PostVm> recentPost = ViewData["PostRecent"] as List<PostVm>;
	List<PostVm> popularPost = ViewData["PostPopular"] as List<PostVm>;
	List<PostVm> postInDay = ViewData["PostInDay"] as List<PostVm>;
	
}
@{
	ViewData["Title"] = "Detail";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
	.post-image {
		width: 60px;
		height: 60px;
		border-radius: 50%;
		object-fit: cover;
	}
	.avatar-image {
		width: 70px;
		height: 70px;
		border-radius: 50%;
		object-fit: cover;
	}

	.replyBtn {
		background-color: #fe4f70;
		color: white;
		padding: 1px 15px ;
		border: none;
		border-radius: 50px; /* Điều này làm cho góc của nút tròn */
		cursor: pointer;

	}

	/* (Tùy chọn) Thiết lập một lớp cho ô input để tùy chỉnh giao diện */
	.replyInput {
		padding: 7px 20px;
		border: 1px solid #fe4f70;
		border-radius: 50px;
		width:  65%;
		
		margin: 10px;
	}

	/* (Tùy chọn) Thiết lập một lớp cho nút "Submit Reply" */
	.submitReplyBtn {
		background-color: #fe4f70;
		float: right;
		color: white;
		padding: 7px 20px;
		border: none;
		border-radius: 50px;
		cursor: pointer;
		margin : 10px;

	}

	.replyForm {
		margin-top: 10px;
	}

	#like-icon {
		width: 20px; /* Điều chỉnh kích thước icon theo mong muốn */
		height: 20px;
		margin-left: 5px; /* Điều chỉnh khoảng cách giữa icon và văn bản */
	}

	#like-button.liked {
		background-color: blue; /* Màu nền khi đã like */
		color: #fff; /* Màu chữ khi đã like */
	}

	 
</style>
<script>
    // Bắt đầu chờ khi DOM đã được load
    document.addEventListener("DOMContentLoaded", function () {
        // Lấy tất cả các nút "Reply" và lặp qua từng nút để thêm sự kiện click
        var replyButtons = document.querySelectorAll('.replyBtn');
        replyButtons.forEach(function (button) {
            button.addEventListener('click', function () {
                // Tìm đến phần input và hiển thị nó khi nút "Reply" được nhấn
                var replyForm = button.nextElementSibling;
                replyForm.style.display = 'block';
            });
        });

        // (Tùy chọn) Nếu bạn muốn có nút "Submit Reply", bạn có thể thêm sự kiện cho nút đó để xử lý
        var submitButtons = document.querySelectorAll('.submitReplyBtn');
        submitButtons.forEach(function (submitButton) {
            submitButton.addEventListener('click', function () {
                // Lấy giá trị từ input và xử lý nó (ví dụ: gửi lên server)
                var replyInput = submitButton.previousElementSibling;
                var replyText = replyInput.value;

                // (Tùy chọn) Gửi dữ liệu trả lời lên server ở đây...

                // (Tùy chọn) Sau khi xử lý xong, có thể ẩn phần input trả lời
                replyInput.value = '';
                replyInput.parentNode.style.display = 'none';
            });
        });
    });
</script>


<section class="main-content mt-3">
	<div class="container-xl">
		
		<nav aria-label="breadcrumb">
			<ol class="breadcrumb">
				<li class="breadcrumb-item"><a href="@Url.Action("index", "home")">Home</a></li>
				<li class="breadcrumb-item"><a asp-action="ListPostOfCategory" asp-controller="Post" asp-route-categoryId="@Model.Post.CategoryId">@Html.DisplayFor(model => model.Post.CategoryName)</a></li>
				<li class="breadcrumb-item active" aria-current="page">@Html.DisplayFor(model => model.Post.Title)</li>
			</ol>
		</nav>
		
		<div class="row gy-4">

			<div class="col-lg-8">
				<!-- post single -->
				<div class="post post-single">
					<!-- post header -->
					<div class="post-header">

						<h1 class="title mt-0 mb-3">@Html.DisplayFor(model => model.Post.Title)</h1>
						<ul class="meta list-inline mb-0">
							<li class="list-inline-item"><a asp-action="UserPost" asp-controller="Post" asp-route-userId="@Model.Post.UserId">@Html.DisplayFor(model => model.Post.UserName)</a></li>
							<li class="list-inline-item"><a asp-action="ListPostOfCategory" asp-controller="Post" asp-route-categoryId="@Model.Post.CategoryId">@Html.DisplayFor(Model => Model.Post.CategoryName)</a></li>
							<li class="list-inline-item">@Html.DisplayFor(model => model.Post.UploadDate)</li>
							<li class="list-inline-item">@Html.DisplayFor(model => model.Post.View) Views</li>

						</ul>

						
					</div>

					<!-- featured image -->
					@*<div class="featured-image">
						<img src="@Html.DisplayFor(model => model.Post.Image)" alt="post-title" />
					</div>*@
					<!-- post content -->
					<div class="post-content clearfix">
						@Html.DisplayFor(model => model.Post.Desprition)
					</div>
					<!-- post content -->
					<div class="post-content clearfix">
						@Html.Raw(Model.Post.Content)
					</div>
					<!-- post bottom section -->
					<div class="post-bottom">
						<div class="row d-flex align-items-center">
							
							<div class="col-md-6 col-12 text-center text-md-start">

								@if (@ViewBag.CheckLike == true)
								{
									
									<a title="Bỏ thích" a-like-id="@Model.Post.PostID" id="like-count" class="like-post btn btn-danger">
										<span class="u-icon u-text-white"></span>
										<i class="fa fa-solid fa-heart liked" style="color: yellow"></i>
										&nbsp;Bỏ Thích @Model.Post.CountLike

									</a>
								}
								else
								{

									<a title="Thích" a-like-id="@Model.Post.PostID" id="like-count" class="like-post  btn btn-success">
										<span class="u-icon u-text-white">
										</span><i class="fa fa-solid fa-heart "></i>
										&nbsp;Thích @Model.Post.CountLike

									</a>
									
								}
								

							</div>
							<div class="col-md-6 col-12 text-center text-md-start">
								<!-- tags -->
								<a href="#" class="tag">#Trending</a>
								<a href="#" class="tag">#Video</a>
								<a href="#" class="tag">#Featured</a>
							</div>
							
						</div>
					</div>

				</div>

				


				<div class="spacer" data-height="50"></div>
				
				<!-- section header -->
				<div class="section-header">
					
						<h3 class="section-title">Comments</h3>
						<img src="~/images/wave.svg" class="wave" alt="wave" />
					
				</div>
				<!-- post comments -->
				
				<div  class="comments bordered padding-30 rounded">						
					<ul id="comments">
						<!-- comment item -->
						@await Html.PartialAsync("_CommentList",Model.Comments)									
							
					</ul>					
				</div>
				
			@*	<div class="spacer" data-height="50"></div>*@

				<!-- section header -->
				<div class="section-header">
					<h3 class="section-title">Leave Comment</h3>
					<img src="~/images/wave.svg" class="wave" alt="wave" />
				</div>
				<!-- comment form -->
				<div class="comment-form rounded bordered padding-30">
					
						<div class="form-group" style="margin-bottom: 20px;">
							
						<form id="add-comment-form" asp-page-handler="AddComment" class="row" style="justify-content: center;align-items: center;">
							<input type="hidden" name="postId" value="@Model.Post.PostID" />
							<div class="messages"></div>

							<div class="row">

								<div class="column col-md-12">
									<!-- Comment textarea -->
									<div class="form-group">
										<textarea name="content" id="InputComment" class="form-control" rows="4" placeholder="Your comment here..." required="required"></textarea>
									</div>
								</div>



							</div>

							<button type="submit" name="submit" id="submit" value="Submit" style="width: 130px" class="btn btn-default">Submit</button><!-- Submit Button -->

						</form>
						</div>
				</div>
			</div>

			<div class="col-lg-4">

				<!-- sidebar -->
				<div class="sidebar">


					<!-- widget popular posts -->
					<div class="widget rounded">
						<div class="widget-header text-center">
							<h3 class="widget-title">Popular Posts</h3>
							<img src="~/images/wave.svg" class="wave" alt="wave" />
						</div>
						<div class="widget-content">
							<!-- post -->
							@for (int i = 0; i < popularPost.Count; i++)
							{
								<div class="post post-list-sm circle">
									<div class="thumb circle">
										<span class="number">@(i + 1)</span>
										<a asp-action="Detail" asp-controller="Post" asp-route-ID="@popularPost[i].PostID">
											<div class="inner">
												<img src="@popularPost[i].Image" class="post-image" alt="post-title" />
											</div>
										</a>
									</div>
									<div class="details clearfix">
										<h6 class="post-title my-0"><a asp-action="Detail" asp-controller="Post" asp-route-ID="@popularPost[i].PostID">@popularPost[i].Title</a></h6>
										<ul class="meta list-inline mt-1 mb-0">
											<li class="list-inline-item">@popularPost[i].UploadDate.ToString("dd/MM/yyyy")</li>
										</ul>
									</div>
								</div>

							}
						
						</div>
					</div>

					<!-- widget categories -->
				


					<!-- widget post carousel -->
					<div class="widget rounded">
						<div class="widget-header text-center">
							<h3 class="widget-title">Các Tin Tức Trong Ngày</h3>
							<img src="~/images/wave.svg" class="wave" alt="wave" />
						</div>
						<div class="widget-content">
							<div class="post-carousel-widget">
								<!-- post -->
								@foreach(var items in postInDay){
								<div class="post post-carousel">
									<div class="thumb rounded">
											<a asp-action="ListPostOfCategory" asp-controller="Post" asp-route-categoryId="@items.CategoryId" class="category-badge position-absolute">@items.CategoryName</a>
											<a asp-action="Detail" asp-controller="Post" asp-route-ID="@items.PostID">
											<div class="inner">
												<img src="@items.Image" alt="post-title" />
											</div>
										</a>
									</div>
										<h5 class="post-title mb-0 mt-4"><a asp-action="Detail" asp-controller="Post" asp-route-ID="@items.PostID">@items.Title</a></h5>
									<ul class="meta list-inline mt-2 mb-0">
											<li class="list-inline-item"><a asp-action="UserPost" asp-controller="Post" asp-route-userId="@items.UserId">@items.UserName</a></li>
										<li class="list-inline-item">@items.UploadDate.ToString("dd/MM/yyyy")</li>
									</ul>
								</div>
								}
							
							</div>
							<!-- carousel arrows -->
							<div class="slick-arrows-bot">
								<button type="button" data-role="none" class="carousel-botNav-prev slick-custom-buttons" aria-label="Previous"><i class="icon-arrow-left"></i></button>
								<button type="button" data-role="none" class="carousel-botNav-next slick-custom-buttons" aria-label="Next"><i class="icon-arrow-right"></i></button>
							</div>
						</div>
					</div>

					

					<!-- widget tags -->
					<div class="widget rounded">
						<div class="widget-header text-center">
							<h3 class="widget-title">Tag Clouds</h3>
							<img src="~/images/wave.svg" class="wave" alt="wave" />
						</div>
						<div class="widget-content">
							<a href="#" class="tag">#Trending</a>
							<a href="#" class="tag">#Video</a>
							<a href="#" class="tag">#Featured</a>
							<a href="#" class="tag">#Gallery</a>
							<a href="#" class="tag">#Celebrities</a>
						</div>
					</div>

				</div>

			</div>

		</div>

	</div>
</section>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>

	
	
	$(document).ready(function () {
		// BÌNH LUẬN
		// Thêm comment
		$('#add-comment-form').submit(function (event) {
			event.preventDefault();
			var form = $(this);
			$.ajax({
				
				url: '@Url.Action("AddComment", "Comment")',
				type: 'POST',
				data: form.serialize(),
				success: function () {

					loadComments();
					
					

					form.find('textarea[name="content"]').val('');
				},
				error: function () {
					alert('Vui lòng đăng nhập');
				}
			});
		});

	
		function loadComments() {
			$.ajax({
				
				url: '@Url.Action("GetComments", "Comment")',
				type: 'GET',
				data: { postId: '@Model.Post.PostID' },
				success: function (result) {
					console.log(result);
					$('#comments').html(result);
				}
			});
		}
		// LIKE
		$('.like-post').click(function (event) {
			event.preventDefault();
			var Id = $(this).attr('a-like-id');
			var likeIcon = $('a.like-post i');

			if (likeIcon.hasClass('liked')) {

				$.ajax({
					url: '/Post/Like',
					type: 'POST',
					
					data: { postId: '@Model.Post.PostID' },
					success: function (response) {
						window.location.reload();
					},
					error: function () {
						alert('Có lỗi xảy ra khi xóa thích bài viết');

					}
				});
			} else {
				$.ajax({
					url: '/Post/Like',
					type: 'POST',
					
					data: { postId: '@Model.Post.PostID' },
					success: function (response) {
						window.location.reload();
					},
					error: function () {
						alert('Vui lòng đăng nhập');

						// alert('Có lỗi xảy ra khi lưu bài viết');
					}
				});
			}

		});
		
	});
</script>